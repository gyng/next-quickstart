worker_processes 2;
worker_rlimit_nofile 1024;
error_log /dev/stdout info;

events {
    worker_connections 1024;
}

http {
    log_format json_format escape=json
    '{'
      '"_type": "access_log",'
      '"body_bytes_sent": "$body_bytes_sent",'
      '"bytes_sent": "$bytes_sent",'
      '"connection_requests": "$connection_requests",'
      '"connection": "$connection",'
      '"http_referrer": "$http_referer",'
      '"http_user_agent": "$http_user_agent",'
      '"pipe": "$pipe",'
      '"remote_addr": "$remote_addr",'
      '"remote_user": "$remote_user",'
      '"request_time": "$request_time",'
      '"request": "$request",'
      '"status": "$status",'
      '"time_iso8601": "$time_iso8601",'
      '"time_local": "$time_local",'
      '"X-Forwarded-For": "$http_x_forwarded_for"'
    '}';
    access_log /dev/stdout json_format;

    charset utf-8;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;
    types_hash_max_size 2048;
    client_max_body_size 16M;

    include mime.types;
    default_type application/octet-stream;

    gzip on;
    gzip_static on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    # security, cache headers
    # add_header Cache-Control "public";
    # add_header X-Frame-Options "SAMEORIGIN" always;
    # add_header X-XSS-Protection "1; mode=block" always;
    # add_header X-Content-Type-Options "nosniff" always;
    # add_header Referrer-Policy "no-referrer-when-downgrade" always;
    # add_header Content-Security-Policy default-src "self";
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # www to non-www
    # server {
    #     listen 8080;
    #     server_name www.example.com;
    #     return 301 $scheme://example.com$request_uri;
    # }

    server {
        root /usr/app;
        listen 8080;

        #  HTTPS redirect
        # if ($http_x_forwarded_proto = "http") {
        #     return 301 https://$host$request_uri;
        # }

        location ~* \.(woff|woff2|ttf|svg|eot|otf)$ {
            expires 1M;
            add_header Cache-Control "public";
        }

        location ~* \.(css|png|jpg|jpeg|gif|ico)$ {
            expires 1d;
            add_header Cache-Control "public";
        }

        location ~* \.(js|gz)$ {
            expires 1y;
            add_header Cache-Control "public";
        }

        # This version file is created in the Dockerfile
        location = /version {
            default_type text/plain;
            add_header Cache-Control "no-cache";
        }

        error_page 404 @error;

        location / {
            expires 1d;
            try_files $uri $uri.html $uri/ =404;
        }

        location @error {
            try_files $uri /404.html /404.html =404;
        }
    }
}
